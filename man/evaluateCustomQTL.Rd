% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qtl-evaluation-methods.R
\name{evaluateCustomQTL}
\alias{evaluateCustomQTL}
\title{Apply an arbitrary QTL rule to a tibble}
\usage{
evaluateCustomQTL(data, posterior, f, statusCol = Status, ...)
}
\arguments{
\item{data}{the tibble containing site-level observed metrics}

\item{posterior}{the tibble containing the posterior distribution of the
metric, usually obtained from a fit Bayes model function.}

\item{f}{the function that evaluates the QTL.  The first two parameters of
\code{f} should be \code{data} and \code{posterior} as defined above.}

\item{statusCol}{The name of the column in the augmented \code{data} tibble that
defines the status of the corresponding row}

\item{...}{Other arguments passed to \code{f}.}
}
\value{
a list containing at least two elements.  One element is a character
string named \code{status} that reports the status of the QTL rule.  If the QTL
has not been breached, the value of this element should be \code{"OK"}.  Other
values will depend on the actions of \code{f}, but use of a consistent nomenclature
is recommended.  Functions provided by the \code{rbqmR} package itself will return
values such as \code{"WARNING"} or \code{"ACTION"}.  The second elements is named \code{data}
that contains a copy of the \code{data} tibble augmented with  \code{statusCol}.

Other elements of the return value depend on the actions of \code{f}.
}
\description{
This function requires two tibbles and a function, plus arbitrary arguments.
One tibble contains observed site level metrics.  The other tibble contains
a posterior estimate of the distribution of the metric.  Applying the
function should determine (a) whether or not the QTL has been breached (and
at what level - eg action or warning) and (b) which observations in the site
level tibble contribute to the breach.
}
\details{
This functions serves both as the common basis on which more specific QTL
rules may be evaluated and also as an avenue for the evaluation of study-
specific or other custom QTL rules may be evaluated.
}
